version: 2.1

defaults: &defaults
  environment:
    OPAMJOBS: 2
    OPAMVERBOSE: 1
    OPAMYES: true
    TERM: xterm
    SKIP_BUILD: |
      coq-async-test
      coq-http
  parameters:
    coq:
      type: string
  docker:
    - image: coqorg/coq:<<parameters.coq>>

commands:
  startup:
    steps:
    - checkout
    - run:
        name: Configure environment
        command: echo . ~/.profile >> $BASH_ENV
  prepare:
    steps:
    - run:
        name: Install dependencies
        command: |
            opam update
            opam repo add coq-extra-dev https://coq.inria.fr/opam/extra-dev
            opam install --deps-only .
    - run:
        name: List installed packages
        command: |
            opam list
            opam info coq
  build:
    steps:
    - run:
        name: Building QuickChick
        command: opam pin coq-quickchick .
  test:
    steps:
    - run:
        name: Unit testing
        working_directory: test
        command: make -j`nproc`
    - run:
        name: Testing Tutorial
        working_directory: examples
        command: make tutorial
    - run:
        name: Testing IFC
        working_directory: examples/ifc-basic
        command: make -j`nproc`
    - run:
        name: Testing Red-black tree
        working_directory: examples/RedBlack
        command: make -j`nproc`
    - run:
        name: Testing STLC
        working_directory: examples/stlc
        command: make -j`nproc`
    - run:
        name: Testing Multifile Mutation
        working_directory: examples/multifile-mutation
        command: make -j`nproc` test
    - run:
        name: Testing C Mutation
        working_directory: examples/c-mutation
        command: make -j`nproc` lesstest
    - run:
        name: Testing Python I/O
        working_directory: examples/python-io
        command: make -j`nproc`
    - run:
        name: Test dependants
        no_output_timeout: 20m
        command: |
          PINS=$(echo `opam list -s --pinned --columns=package` | sed 's/ /,/g')
          PACKAGES=`opam list -s --depends-on coq-quickchick --coinstallable-with $PINS`
          for PACKAGE in $PACKAGES
          do DEPS_FAILED=false
             echo $SKIP_BUILD | tr ' ' '\n' | grep ^$PACKAGE$ > /dev/null &&
               echo Skip $PACKAGE && continue
             opam install --deps-only $PACKAGE || DEPS_FAILED=true
             [ $DEPS_FAILED == true ] || opam install -t $PACKAGE
          done
  remove:
    steps:
    - run:
        name: Removing QuickChick
        command: opam remove .
jobs:
  opam:
    <<: *defaults
    steps:
    - startup
    - prepare
    - build
    - test
    - remove
  dune:
    <<: *defaults
    steps:
    - startup
    - prepare
    - run: opam pin -n add coq-quickchick .
    - run: make compat && dune build
    - run: dune install coq-quickchick
    - test
    - run: dune uninstall coq-quickchick

workflows:
  version: 2
  build:
    jobs:
      - opam:
          name: OPAM 8.11
          coq: 8.11-ocaml-4.11-flambda
      - dune:
          name: Dune 8.11
          coq: 8.11-ocaml-4.11-flambda
      - opam:
          name: OPAM 8.12
          coq: 8.12-ocaml-4.11-flambda
      - dune:
          name: Dune 8.12
          coq: 8.12-ocaml-4.11-flambda
      - opam:
          name: OPAM 8.13
          coq: 8.13-ocaml-4.11-flambda
      - dune:
          name: Dune 8.13
          coq: 8.13-ocaml-4.11-flambda
      - opam:
          name: OPAM 8.14
          coq: 8.14-ocaml-4.12-flambda
      - dune:
          name: Dune 8.14
          coq: 8.14-ocaml-4.12-flambda
      - opam:
          name: OPAM dev
          coq: dev-ocaml-4.11-flambda
      - dune:
          name: Dune dev
          coq: dev-ocaml-4.11-flambda
